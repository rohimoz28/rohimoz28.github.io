<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Docker on Rohimoz28</title>
    <link>https://rohimoz28.github.io/tags/docker/</link>
    <description>Recent content in Docker on Rohimoz28</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Mar 2025 17:50:54 +0700</lastBuildDate>
    <atom:link href="https://rohimoz28.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shell Script Untuk Backup Otomatis</title>
      <link>https://rohimoz28.github.io/blog/shell-script-untuk-backup-otomatis/</link>
      <pubDate>Fri, 28 Mar 2025 17:50:54 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/shell-script-untuk-backup-otomatis/</guid>
      <description>Backup aplikasi adalah sesuatu yang wajib dilakukan. Jika rutin dilakukan, ada baiknya kita buat menjadi otomatis.</description>
    </item>
    <item>
      <title>Konfigurasi Dasar CI/CD Gitlab</title>
      <link>https://rohimoz28.github.io/blog/konfigurasi-dasar-cicd-gitlab/</link>
      <pubDate>Thu, 20 Feb 2025 15:32:40 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/konfigurasi-dasar-cicd-gitlab/</guid>
      <description>Berikut ini adalah konfigurasi dasar file gitlab-ci.yml yang digunakan untuk CI/CD pada Gitlab.</description>
    </item>
    <item>
      <title>Cara Debug Odoo Di Docker Menggunakan Pdb</title>
      <link>https://rohimoz28.github.io/blog/cara-debug-odoo-di-docker-menggunakan-pdb/</link>
      <pubDate>Mon, 16 Dec 2024 13:27:39 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/cara-debug-odoo-di-docker-menggunakan-pdb/</guid>
      <description>&lt;h2 id=&#34;latar-belakang-masalah&#34;&gt;Latar Belakang Masalah&lt;/h2&gt;
&lt;p&gt;Untuk melakukan debugging di odoo, ada beberapa cara. Yang paling direkomendasikan adalah
menggunakan python package &lt;code&gt;pdb&lt;/code&gt;.
Sayangnya, ketika develop Odoo menggunakan docker. Perlu ada konfigurasi khusus agar kita bisa menggunakan
package tersebut.&lt;/p&gt;
&lt;p&gt;Dalam praktik kali ini saya mengasumsikan teman-teman sudah &lt;a href=&#34;https://rohimoz28.github.io/blog/install-odoo-menggunakan-docker/&#34;&gt;menginstall odoo menggunakan docker&lt;/a&gt;.
Kali ini, kita akan menggunakan VSCode sebagai text editor.&lt;/p&gt;
&lt;p&gt;Ada dua cara untuk melakukan debugging saat develop menggunakan docker.&lt;/p&gt;
&lt;h2 id=&#34;1-menggunakan-metode-attach-container&#34;&gt;1. Menggunakan Metode Attach Container&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Baik digunakan&lt;/strong&gt; di local development environment. &lt;br&gt;
Karena tidak akan mengganggu STDIN dari program dan bisa melalui remote debugging.
Tambahkan kedua line dibawah ini pada pengaturan &lt;code&gt;docker-compose.yaml&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Multi Instance Odoo</title>
      <link>https://rohimoz28.github.io/blog/install-multi-odoo-instance-menggunakan-docker/</link>
      <pubDate>Sun, 29 Sep 2024 19:03:00 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/install-multi-odoo-instance-menggunakan-docker/</guid>
      <description>tutorial dan cara install banyak odoo instance dengan docker</description>
    </item>
    <item>
      <title>Install Odoo 17 Menggunakan Docker</title>
      <link>https://rohimoz28.github.io/blog/install-odoo-menggunakan-docker/</link>
      <pubDate>Sun, 29 Sep 2024 18:41:16 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/install-odoo-menggunakan-docker/</guid>
      <description>&lt;p&gt;Tulisan ini akan menunjukkan cara meng-install Odoo dan Postgresql menggunakan Docker.
Sebelum mengikuti tutorial ini, penulis asumsikan bahwa kamu sudah meng-install Docker di sistem operasi kalian.
Jika belum, silahkan ikuti &lt;a href=&#34;%5Bhttps://%5D(https://docs.docker.com/engine/install/)&#34;&gt;Tutorial Install Docker&lt;/a&gt; dari laman resminya.&lt;/p&gt;
&lt;p&gt;Untuk tuorial kali ini, akan menggunakan source code dari &lt;a href=&#34;https://github.com/rohimoz28/odoo-docker&#34;&gt;repository&lt;/a&gt;
github saya. Silahkan di fork atau di clone di lokal kalian.&lt;/p&gt;
&lt;h2 id=&#34;struktur-folder&#34;&gt;Struktur Folder&lt;/h2&gt;
&lt;p&gt;Masuk ke folder yang baru di clone, maka kalian akan menemukan 2 folder. &lt;code&gt;conf&lt;/code&gt; &lt;code&gt;customize&lt;/code&gt;.
Struktur folder kalian akan tampak seperti ini:
&lt;img loading=&#34;lazy&#34; src=&#34;images/struktur-direktori.jpg&#34; alt=&#34;struktur-direktori&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Relokasi Docker</title>
      <link>https://rohimoz28.github.io/blog/relokasi-docker/</link>
      <pubDate>Thu, 29 Aug 2024 18:41:16 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/relokasi-docker/</guid>
      <description>&lt;h3 id=&#34;latar-belakang-masalah&#34;&gt;Latar Belakang Masalah&lt;/h3&gt;
&lt;p&gt;Secara default, direktori docker terletak pada &lt;code&gt;/var/lib/docker&lt;/code&gt;. Ada kalanya, ketika docker image , volume dan container sudah terlalu besar sehingga memakan storage. Kita ingin memindahkan letak direktori docker ini agar tidak memakan storage &lt;code&gt;root&lt;/code&gt; kita yang pada akhirnya akan menghentikan service docker itu sendiri.&lt;/p&gt;
&lt;h3 id=&#34;solusi&#34;&gt;Solusi&lt;/h3&gt;
&lt;p&gt;Maka dari itu, kita perlu merelokasi direktori default docker ini ke partisi lain yang memiliki kapasitas lebih besar daripada partisi &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;persiapan&#34;&gt;Persiapan&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;stop semua docker yang sedang berjalan&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
